<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.hy.mapper.TUserMapper" >
  <resultMap id="BaseResultMap" type="cn.hy.pojo.TUser" >
    <id column="user_ID" property="userId" jdbcType="INTEGER" />
    <result column="mobile_Number" property="mobileNumber" jdbcType="VARCHAR" />
    <result column="roaming_Status" property="roamingStatus" jdbcType="CHAR" />
    <result column="com_Level" property="comLevel" jdbcType="CHAR" />
    <result column="customer_ID" property="customerId" jdbcType="INTEGER" />
    <result column="account_ID" property="accountId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_ID, mobile_Number, roaming_Status, com_Level, customer_ID, account_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.hy.pojo.TUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_ID = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where user_ID = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hy.pojo.TUserExample" >
    delete from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hy.pojo.TUser" >
    insert into t_user (user_ID, mobile_Number, roaming_Status, 
      com_Level, customer_ID, account_ID
      )
    values (#{userId,jdbcType=INTEGER}, #{mobileNumber,jdbcType=VARCHAR}, #{roamingStatus,jdbcType=CHAR}, 
      #{comLevel,jdbcType=CHAR}, #{customerId,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.hy.pojo.TUser" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_ID,
      </if>
      <if test="mobileNumber != null" >
        mobile_Number,
      </if>
      <if test="roamingStatus != null" >
        roaming_Status,
      </if>
      <if test="comLevel != null" >
        com_Level,
      </if>
      <if test="customerId != null" >
        customer_ID,
      </if>
      <if test="accountId != null" >
        account_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="mobileNumber != null" >
        #{mobileNumber,jdbcType=VARCHAR},
      </if>
      <if test="roamingStatus != null" >
        #{roamingStatus,jdbcType=CHAR},
      </if>
      <if test="comLevel != null" >
        #{comLevel,jdbcType=CHAR},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hy.pojo.TUserExample" resultType="java.lang.Integer" >
    select count(*) from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_user
    <set >
      <if test="record.userId != null" >
        user_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.mobileNumber != null" >
        mobile_Number = #{record.mobileNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.roamingStatus != null" >
        roaming_Status = #{record.roamingStatus,jdbcType=CHAR},
      </if>
      <if test="record.comLevel != null" >
        com_Level = #{record.comLevel,jdbcType=CHAR},
      </if>
      <if test="record.customerId != null" >
        customer_ID = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null" >
        account_ID = #{record.accountId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_user
    set user_ID = #{record.userId,jdbcType=INTEGER},
      mobile_Number = #{record.mobileNumber,jdbcType=VARCHAR},
      roaming_Status = #{record.roamingStatus,jdbcType=CHAR},
      com_Level = #{record.comLevel,jdbcType=CHAR},
      customer_ID = #{record.customerId,jdbcType=INTEGER},
      account_ID = #{record.accountId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hy.pojo.TUser" >
    update t_user
    <set >
      <if test="mobileNumber != null" >
        mobile_Number = #{mobileNumber,jdbcType=VARCHAR},
      </if>
      <if test="roamingStatus != null" >
        roaming_Status = #{roamingStatus,jdbcType=CHAR},
      </if>
      <if test="comLevel != null" >
        com_Level = #{comLevel,jdbcType=CHAR},
      </if>
      <if test="customerId != null" >
        customer_ID = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        account_ID = #{accountId,jdbcType=INTEGER},
      </if>
    </set>
    where user_ID = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hy.pojo.TUser" >
    update t_user
    set mobile_Number = #{mobileNumber,jdbcType=VARCHAR},
      roaming_Status = #{roamingStatus,jdbcType=CHAR},
      com_Level = #{comLevel,jdbcType=CHAR},
      customer_ID = #{customerId,jdbcType=INTEGER},
      account_ID = #{accountId,jdbcType=INTEGER}
    where user_ID = #{userId,jdbcType=INTEGER}
  </update>
</mapper>